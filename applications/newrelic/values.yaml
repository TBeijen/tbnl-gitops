externalSecrets:
  environment: <<specifyEnvironment>>

nri-bundle:
  newrelic-infrastructure:
    # newrelic-infrastructure.enabled -- Install the [`newrelic-infrastructure` chart](https://github.com/newrelic/nri-kubernetes/tree/main/charts/newrelic-infrastructure)
    enabled: true
    privileged: true
    kubelet:
      resources:
        limits:
          memory: 300M
        requests:
          cpu: 50m  # default: 100m
          memory: 100M  # default: 150M
    ksm:
      resources:
        limits:
          memory: 200M  # default: 850M  Bump me up if KSM pod shows restarts.
        requests:
          cpu: 50m  # default: 100m
          memory: 100M  # default: 150M
    controlPlane:
      resources:
        limits:
          memory: 300M
        requests:
          cpu: 50m  # default: 100m
          memory: 100M  # default: 150M

  nri-prometheus:
    enabled: false

  nri-metadata-injection:
    enabled: true
    resources:
      limits:
        memory: 80M
      requests:
        cpu: 50m  # default: 100m
        memory: 30M

  kube-state-metrics:
    enabled: true
    image:
      tag: v2.10.0

  nri-kube-events:
    enabled: true

  newrelic-logging:
    enabled: true
    lowDataMode: true
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 32Mi

  newrelic-pixie:
    enabled: false

  pixie-chart:
    enabled: false
    clusterName: <<specify>>

  newrelic-infra-operator:
    enabled: false

  newrelic-prometheus-agent:
    enabled: true
    config:
      kubernetes:
        integrations_filter:
          app_values: ["cloudflare-tunnel", "redis", "traefik", "calico", "nginx", "coredns", "kube-dns", "etcd", "cockroachdb", "velero", "harbor", "argocd"]
    verboseLog: false

  newrelic-k8s-metrics-adapter:
    enabled: false

  # -- change the behaviour globally to all the supported helm charts.
  # See [user's guide of the common library](https://github.com/newrelic/helm-charts/blob/master/library/common-library/README.md) for further information.
  # @default -- See [`values.yaml`](values.yaml)
  global:
    # -- The cluster name for the Kubernetes cluster.
    cluster: <<specify>>

    lowDataMode: true

    # -- The license key for your New Relic Account. This will be preferred configuration option if both `licenseKey` and `customSecret` are specified.
    licenseKey: ""
    # -- The license key for your New Relic Account. This will be preferred configuration option if both `insightsKey` and `customSecret` are specified.
    insightsKey: ""
    # -- Name of the Secret object where the license key is stored
    customSecretName: newrelic-license
    # -- Key in the Secret object where the license key is stored
    customSecretLicenseKey: license-key

    # -- Additional labels for chart objects
    labels: {}
    # -- Additional labels for chart pods
    podLabels: {}

    images:
      # -- Changes the registry where to get the images. Useful when there is an internal image cache/proxy
      registry: ""
      # -- Set secrets to be able to fetch images
      pullSecrets: []

    serviceAccount:
      # -- Add these annotations to the service account we create
      annotations: {}
      # -- Configures if the service account should be created or not
      create:
      # -- Change the name of the service account. This is honored if you disable on this chart the creation of the service account so you can use your own
      name:

    # -- (bool) Sets pod's hostNetwork
    # @default -- false
    hostNetwork:
    # -- Sets pod's dnsConfig
    dnsConfig: {}

    # -- Sets pod's priorityClassName
    priorityClassName: ""
    # -- Sets security context (at pod level)
    podSecurityContext: {}
    # -- Sets security context (at container level)
    containerSecurityContext: {}

    # -- Sets pod/node affinities
    affinity: {}
    # -- Sets pod's node selector
    nodeSelector: {}
    # -- Sets pod's tolerations to node taints
    tolerations: []

    # -- Adds extra attributes to the cluster and all the metrics emitted to the backend
    customAttributes: {}

    # -- (bool) Reduces number of metrics sent in order to reduce costs
    # @default -- false
    lowDataMode: true

    # -- (bool) In each integration it has different behavior. See [Further information](#values-managed-globally-3) but all aims to send less metrics to the backend to try to save costs |
    # @default -- false
    privileged: true

    # -- (bool) Must be set to `true` when deploying in an EKS Fargate environment
    # @default -- false
    fargate:

    # -- Configures the integration to send all HTTP/HTTPS request through the proxy in that URL. The URL should have a standard format like `https://user:password@hostname:port`
    proxy: ""

    # -- (bool) Send the metrics to the staging backend. Requires a valid staging license key
    # @default -- false
    nrStaging:
    fedramp:
      # fedramp.enabled -- (bool) Enables FedRAMP
      # @default -- false
      enabled: 

    # -- (bool) Sets the debug logs to this integration or all integrations if it is set globally
    # @default -- false
    verboseLog:
